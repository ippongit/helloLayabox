var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */

var GameConfig = function () {
    function GameConfig() {
        _classCallCheck(this, GameConfig);
    }

    _createClass(GameConfig, null, [{
        key: "init",
        value: function init() {
            //注册Script或者Runtime引用
            var reg = Laya.ClassUtils.regClass;
        }
    }]);

    return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 1280;
GameConfig.height = 720;
GameConfig.scaleMode = "showall";
GameConfig.screenMode = "horizontal";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "RankTest.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{}],2:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**Main.js*/


var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _layaMaxUI = require("./ui/layaMaxUI");

var _layaMaxUI2 = _interopRequireDefault(_layaMaxUI);

var _Rank = require("./script/Rank");

var _Rank2 = _interopRequireDefault(_Rank);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Main = function () {
	function Main() {
		_classCallCheck(this, Main);

		Laya.isWXOpenDataContext = true;
		//根据IDE设置初始化引擎	
		Laya.init(_GameConfig2.default.width, _GameConfig2.default.height);

		Laya["DebugPanel"] && Laya["DebugPanel"].enable();
		Laya.stage.scaleMode = _GameConfig2.default.scaleMode;
		Laya.stage.screenMode = _GameConfig2.default.screenMode;
		Laya.stage.alignV = _GameConfig2.default.alignV;
		Laya.stage.alignH = _GameConfig2.default.alignH;
		//兼容微信不支持加载scene后缀场景
		Laya.URL.exportSceneToJson = _GameConfig2.default.exportSceneToJson;

		this.onConfigLoaded();
	}

	_createClass(Main, [{
		key: "onConfigLoaded",
		value: function onConfigLoaded() {
			wx.onMessage(function (message) {
				switch (message.type) {
					case "show":
						{
							console.log("显示信息： ", message);
							if (this.rank) return;
							this.rank = new _Rank2.default();
							Laya.stage.addChild(this.rank);
							this.rank.submitUserDate(message.bestScore);
						}break;
					case "close":
						{
							if (this.rank) {
								this.rank.destroy(true);
								this.rank = null;
							}
						}break;
				}
			});
		}
	}]);

	return Main;
}();
//激活启动类


new Main();

},{"./GameConfig":1,"./script/Rank":3,"./ui/layaMaxUI":4}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**Rank.js */
var Rank = function (_ui$RankUI) {
    _inherits(Rank, _ui$RankUI);

    function Rank() {
        _classCallCheck(this, Rank);

        return _possibleConstructorReturn(this, (Rank.__proto__ || Object.getPrototypeOf(Rank)).call(this));
    }

    _createClass(Rank, [{
        key: "onEnable",
        value: function onEnable() {
            this.list = this.getChildByName('list');
            var arr = [];
            this.list.array = arr;
        }

        /**
         *写入玩家数据
         */

    }, {
        key: "submitUserDate",
        value: function submitUserDate(bestScore) {
            console.log("开放域写入数据", bestScore);
            var self = this;
            //KVDataList代表排行数据,可以为多个,多个代表多个排行
            //key-排行类型,value-排行分数
            var KVDataList = new Array();
            //value 只能是字符串！！！
            KVDataList.push({
                key: "bestScore",
                value: bestScore.toString()
            });

            wx.setUserCloudStorage({
                KVDataList: KVDataList,
                success: function success(res) {
                    console.log('setUserCloudStorage', 'success', res);
                    self.selectRanking();
                },
                fail: function fail(res) {
                    console.log('setUserCloudStorage', 'fail');
                }
            });
        }

        /**
         * 拉取排行
         */

    }, {
        key: "selectRanking",
        value: function selectRanking() {
            console.log("开始获取排行");
            //openIdList: ['selfOpenId']-代表获取个人数据
            //wx.getFriendCloudStorage获取好友数据(包括自己),所以用avatarUrl头像路径可分辨是否是自己
            //keyList-获取的排行类型,填入几个可以获得几个类别排行

            var self = this;
            wx.getUserInfo({
                openIdList: ['selfOpenId'],
                success: function success(userRes) {
                    //this.loadingLabel.active = false;
                    console.log('拉取排行中的个人信息', userRes.data);
                    //索引代表各个好友0为自己
                    var userData = userRes.data[0];
                    console.log("排行中的个人名字" + userData.nickName);
                    //取出所有好友数据
                    wx.getFriendCloudStorage({
                        keyList: ['bestScore'],
                        success: function success(res) {
                            console.log("wx.getFriendCloudStorage success", res);
                            var data = res.data;
                            data.sort(function (a, b) {
                                if (a.KVDataList.length == 0 && b.KVDataList.length == 0) {
                                    return 0;
                                }
                                if (a.KVDataList.length == 0) {
                                    return 1;
                                }
                                if (b.KVDataList.length == 0) {
                                    return -1;
                                }
                                return b.KVDataList[0].value - a.KVDataList[0].value;
                            });
                            var selfIndex = 0;
                            for (var i = 0; i < data.length; i++) {
                                var playerInfo = data[i];
                                //判断 data[i].nickname === userData,nickName 可能有相同昵称
                                if (data[i].avatarUrl == userData.avatarUrl) {
                                    console.log('此ID为自己');
                                    selfIndex = i;
                                }
                            }

                            for (var i = 0; i < data.length; i++) {
                                console.log('data[' + i + ']: ', data[i]);
                            }

                            self.setRankingDate(data, selfIndex);
                        },
                        fail: function fail(res) {
                            console.log("拉取好友信息失败", res);
                        }
                    });
                },
                fail: function fail(res) {
                    console.log("拉取个人信息失败");
                }
            });
        }

        /**
         * 设置排行界面显示数据
         */

    }, {
        key: "setRankingDate",
        value: function setRankingDate(usersData, selfIndex) {
            console.log("拿到data信息", usersData);
            console.log("长度", usersData.length);
            var arr = [];

            var data_length = usersData.length;
            if (data_length > 5) data_length = 5; //只显示前五名

            for (var i = 0; i < data_length; i++) {
                var user = usersData[i];
                //wxAPI中定义的nickname全部小写
                arr.push({ nickName: user.nickname, avatarUrl: user.avatarUrl, KVDataList: user.KVDataList });
            }

            console.log('数据准备完毕 \n', arr);
            //刷新排行榜
            this.update(arr);
        }
    }, {
        key: "update",
        value: function update(arr) {
            if (arr === undefined) return;
            this.list.array = arr;
            this.list.renderHandler = new Laya.Handler(this, this.onRender);
        }
    }, {
        key: "onRender",
        value: function onRender(cell, index) {
            //获取当前渲染条目的数据
            var data = this.list.array[index];
            console.log("个人信息", data);
            var ranking = cell.getChildByName("ranking");
            ranking.text = index + 1;
            //根据子节点的名字name，获取子节点对象。         
            var name = cell.getChildByName("nickName");
            //label渲染列表文本（序号）
            name.text = data.nickName;
            var bestScore = cell.getChildByName("bestScore");
            bestScore.text = data.KVDataList[0].value;
            // var iconBG = cell.getChildByName("iconBG");
            var icon = cell.getChildByName("icon");
            //图片大小要与编辑器内一致,坐标为00,
            icon.loadImage(data.avatarUrl, 0, 0, 60, 60);
            console.log("排行数据=", index, '=刷新完成!~~');
        }
    }]);

    return Rank;
}(ui.RankUI);

exports.default = Rank;

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var CLASS$ = Laya.class;
var STATICATTR$ = Laya.static;
var View = laya.ui.View;
var Dialog = laya.ui.Dialog;
var Scene = Laya.Scene;
if (!window.ui) window.ui = {};
var RankUI = function (_super) {
	function RankUI() {

		RankUI.__super.call(this);
	}
	CLASS$(RankUI, 'ui.RankUI', _super);
	var __proto__ = RankUI.prototype;
	__proto__.createChildren = function () {
		_super.prototype.createChildren.call(this);
		this.createView(RankUI.uiView);
	};
	RankUI.uiView = { "type": "View", "props": { "width": 600, "height": 600 }, "compId": 2, "child": [{ "type": "List", "props": { "width": 600, "name": "list", "height": 400 }, "compId": 3, "child": [{ "type": "Box", "props": { "width": 600, "renderType": "render", "name": "item", "height": 80 }, "compId": 4, "child": [{ "type": "Image", "props": { "y": 0, "x": 0, "width": 600, "skin": "img/panelBK.png", "sizeGrid": "20,20,20,20", "name": "bk", "height": 80 }, "compId": 6 }, { "type": "Label", "props": { "y": 15, "x": 5, "width": 60, "text": "0", "name": "ranking", "height": 60, "fontSize": 48, "color": "#000000", "bold": true, "anchorY": 0, "anchorX": 0, "align": "center" }, "compId": 7 }, { "type": "Image", "props": { "y": 12, "x": 63, "width": 60, "name": "icon", "height": 60 }, "compId": 8 }, { "type": "Label", "props": { "y": 25, "x": 135, "width": 200, "text": "nickName", "name": "nickName", "height": 40, "fontSize": 32, "color": "#000000", "align": "left" }, "compId": 9 }, { "type": "Label", "props": { "y": 25, "x": 360, "width": 200, "text": "1234567890", "name": "bestScore", "height": 40, "fontSize": 32, "color": "#000000", "anchorY": 0, "anchorX": 0, "align": "left" }, "compId": 10 }] }] }], "loadList": ["img/panelBK.png"], "loadList3D": [] };
	return RankUI;
}(View);
exports.default = ui;

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
